---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dns-server
  name: dns-server
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: dns-server
  strategy: {}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: dns-server
    spec:
      serviceAccountName: kubedock-dns-server
      containers:
      - image: {{ .Values.registry }}/kubedock-dns:{{ default .Chart.Version .Values.version }}
        imagePullPolicy: Always
        name: kubedock-dns
{{/*        command:*/}}
{{/*          - tail*/}}
{{/*          - -f*/}}
{{/*          - /dev/null*/}}
        args:
          - --v
          - "{{ .Values.logLevel }}"
        ports:
          - containerPort: 1053
            name: dns
          - containerPort: 8443
            name: https
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
          - mountPath: /etc/kubedock/pki
            name: pki
      volumes:
        - name: pki
          secret:
            secretName: dns-mutator-cert
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dns-server
  name: dns-server
spec:
  ports:
  - name: dns
    port: 53
    protocol: UDP
    targetPort: 1053
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: dns-server
  type: ClusterIP














